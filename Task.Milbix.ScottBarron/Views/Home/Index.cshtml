@model AccountingCalendarViewModel

@{
    var months = new List<SelectListItem>
    {
        new SelectListItem { Text = "January", Value = "1" },
        new SelectListItem { Text = "February", Value = "2" },
        new SelectListItem { Text = "March", Value = "3" },
        new SelectListItem { Text = "April", Value = "4" },
        new SelectListItem { Text = "May", Value = "5" },
        new SelectListItem { Text = "June", Value = "6" },
        new SelectListItem { Text = "July", Value = "7" },
        new SelectListItem { Text = "August", Value = "8" },
        new SelectListItem { Text = "September", Value = "9" },
        new SelectListItem { Text = "October", Value = "10" },
        new SelectListItem { Text = "November", Value = "11" },
        new SelectListItem { Text = "December", Value = "12" }
    };
}


<form asp-action="Index" method="post" class="form-horizontal" role="form">
    <h4>You can select Starting Month to Re-generate Calender. Also can give Start  -  End Date </h4>

@*    <div asp-validation-summary="All" class="text-danger"></div>*@

    <div class="form-group">
        <label asp-for="StartDate">Start Date:</label>
        <input type="date" asp-for="StartDate" class="form-control" >
        <span asp-validation-for="StartDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EndDate">End Date:</label>
        <input type="date" asp-for="EndDate" class="form-control" >
        <span asp-validation-for="EndDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SelectedMonth)
        @Html.DropDownListFor(model => model.SelectedMonth, months, "Select Starting Month Of Financial year", new { @class = "form-control" })
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-5">
            <input type="submit" class="btn btn-primary" value="Generate Calender" />
        </div>
    </div>

</form>

<hr />

<h2> Accounting Calendar</h2>

@foreach (var financialYear in Model.FinancialYears)
{
    <h4>Financial Year : @financialYear.StartDate.ToString("yyyy") - @financialYear.EndDate.ToString("yyyy") </h4>
    <h4>Days: @financialYear.DaysInYear</h4>

    <h4>Periods:</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Period Number</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var period in financialYear.PeriodList)
            {
                <tr>
                    <td>@period.StartDate.ToString("yyyy-MM-dd")</td>
                    <td>@period.EndDate.ToString("yyyy-MM-dd")</td>
                    <td>@period.Number</td>
                </tr>
            }
        </tbody>
    </table>
}



<hr />




























@*@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

@{
    DateTime currentDate = DateTime.Now;
    int financialYear = currentDate.Month >= 4 ? currentDate.Year : currentDate.Year - 1;
    DateTime financialYearStart = new DateTime(financialYear, 4, 1);
    DateTime financialYearEnd = new DateTime(financialYear + 1, 3, 31);
    int numberOfPeriods = (financialYearEnd.Year - financialYearStart.Year) * 12 + financialYearEnd.Month - financialYearStart.Month + 1;
}

<h1>Financial Year @financialYear-@financialYearEnd.Year</h1>
<p>Days: @financialYearStart.DayOfYear - @financialYearEnd.DayOfYear</p>

<h2>Periods:</h2>

<table class="table">
    <thead>
        <tr>
            <th>Start</th>
            <th>End</th>
            <th>Period Number</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < numberOfPeriods; i++)
        {
            DateTime periodStartDate = financialYearStart.AddMonths(i);
            DateTime periodEndDate = periodStartDate.AddMonths(1).AddDays(-1);

            <tr>
                <td>@periodStartDate.ToString("yyyy-MM-dd")</td>
                <td>@periodEndDate.ToString("yyyy-MM-dd")</td>
                <td>@(i + 1)</td>
            </tr>
        }
    </tbody>
</table>

*@